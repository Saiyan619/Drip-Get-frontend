import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
const PersonalInformation = ({ isEditing, handleSave, setIsEditing, profileData, setProfileData }) => {
    return (_jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between", children: [_jsx(CardTitle, { children: "Personal Information" }), _jsx(Button, { variant: isEditing ? "default" : "outline", onClick: () => (isEditing ? handleSave() : setIsEditing(true)), children: isEditing ? "Save Changes" : "Edit Profile" })] }), _jsxs(CardContent, { className: "space-y-4 flex-col", children: [_jsxs("div", { className: "flex flex-col", children: [_jsxs("div", { className: "flex justify-between flex-col sm:flex-row gap-4", children: [_jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "firstName", children: "First Name" }), _jsx(Input, { id: "firstName", value: profileData.firstName, onChange: (e) => setProfileData({ ...profileData, firstName: e.target.value }), disabled: !isEditing })] }), _jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "lastName", children: "Last Name" }), _jsx(Input, { id: "lastName", value: profileData.lastName, onChange: (e) => setProfileData({ ...profileData, lastName: e.target.value }), disabled: !isEditing })] })] }), _jsxs("div", { className: "flex justify-between flex-col sm:flex-row gap-4", children: [_jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "email", children: "Email" }), _jsx(Input, { id: "email", type: "email", value: profileData.email, onChange: (e) => setProfileData({ ...profileData, email: e.target.value }), disabled: true })] }), _jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "phone", children: "Phone" }), _jsx(Input, { id: "phone", value: profileData.phone, onChange: (e) => setProfileData({ ...profileData, phone: e.target.value }), disabled: !isEditing })] }), _jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "country", children: "Country" }), _jsx(Input, { id: "country", value: profileData.address.country, onChange: (e) => setProfileData({ ...profileData, address: { ...profileData.address, country: e.target.value } }), disabled: !isEditing })] })] })] }), _jsx(Separator, {}), _jsx(CardTitle, { children: "Address" }), _jsxs("div", { className: "flex flex-col", children: [_jsxs("div", { className: "flex justify-between flex-col sm:flex-row gap-4", children: [_jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "street", children: "Street" }), _jsx(Input, { id: "street", value: profileData.address.street, onChange: (e) => setProfileData({ ...profileData, address: { ...profileData.address, street: e.target.value } }), disabled: !isEditing })] }), _jsxs("div", { className: "", children: [_jsx(Label, { htmlFor: "zipCode", children: "ZipCode" }), _jsx(Input, { id: "zipCode", value: profileData.address.zipCode, onChange: (e) => setProfileData({ ...profileData, address: { ...profileData.address, zipCode: e.target.value } }), disabled: !isEditing })] })] }), _jsxs("div", { className: "flex justify-between flex-col sm:flex-row gap-4", children: [_jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "city", children: "City" }), _jsx(Input, { id: "city", value: profileData.address.city, onChange: (e) => setProfileData({ ...profileData, address: { ...profileData.address, city: e.target.value } }), disabled: !isEditing })] }), _jsxs("div", { className: "w-full", children: [_jsx(Label, { htmlFor: "state", children: "State" }), _jsx(Input, { id: "state", value: profileData.address.state, onChange: (e) => setProfileData({ ...profileData, address: { ...profileData.address, state: e.target.value } }), disabled: !isEditing })] })] })] })] })] }));
};
export default PersonalInformation;
