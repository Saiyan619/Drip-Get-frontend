import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { ArrowLeft, MapPin, User, Package } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import { Badge } from "@/components/ui/badge";
import { useParams } from "react-router-dom";
import { useGetOrderById } from "@/apiServices/orderServices";
import { useUser } from "@clerk/clerk-react";
import { CheckoutPage } from "../checkout/Checkout";
import ShippingMethod from "./component/ShippingMethod";
export default function VerifyOrder() {
    const { user } = useUser();
    const { id } = useParams();
    if (!id)
        return _jsx("div", { children: "Invalid Order ID" });
    const { singleOrder } = useGetOrderById(id);
    console.log(singleOrder);
    return (_jsx("div", { className: "container mx-auto px-4 py-6 sm:py-8", children: _jsxs("div", { className: "max-w-4xl mx-auto", children: [_jsxs("div", { className: "flex items-center gap-4 mb-6 sm:mb-8", children: [_jsx(Button, { variant: "ghost", size: "icon", className: "shrink-0", children: _jsx(ArrowLeft, { className: "h-5 w-5" }) }), _jsxs("div", { children: [_jsx("h1", { className: "text-2xl sm:text-3xl font-bold", children: "Verify Your Order" }), _jsx("p", { className: "text-gray-600 mt-1", children: "Please review your order details before placing your order" })] })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8", children: [_jsxs("div", { className: "lg:col-span-2 space-y-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { className: "flex flex-row items-center justify-between", children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Package, { className: "h-5 w-5" }), "Order Items (", singleOrder?.items.length, ")"] }) }), _jsx(CardContent, { className: "space-y-4", children: singleOrder?.items.map((item) => {
                                                const discountPercentage = item.originalPrice
                                                    ? Math.round(((item.originalPrice - item.price) / item.originalPrice) * 100)
                                                    : 0;
                                                return (_jsxs("div", { className: "flex gap-4 p-4 rounded-lg", children: [_jsxs("div", { className: "w-16 h-16 sm:w-20 sm:h-20 relative shrink-0", children: [_jsx("img", { src: item.image || "/placeholder.svg", alt: item.productName, className: "object-cover rounded-lg" }), discountPercentage > 0 && (_jsxs(Badge, { className: "absolute -top-2 -left-2 bg-red-500 text-xs", children: ["-", discountPercentage, "%"] }))] }), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsx("h3", { className: "font-medium text-sm sm:text-base truncate", children: item.productName }), _jsx("p", { className: "text-xs sm:text-sm text-gray-600", children: item.brand }), _jsxs("p", { className: "text-xs sm:text-sm text-gray-600", children: [item.size, " \u2022 ", item.color, " \u2022 Qty: ", item.quantity] }), _jsxs("div", { className: "flex items-center gap-2 mt-1", children: [_jsxs("span", { className: "font-semibold text-sm sm:text-base", children: ["$", (item.price * item.quantity).toFixed(2)] }), item.originalPrice && (_jsxs("span", { className: "text-xs sm:text-sm text-gray-500 line-through", children: ["$", (item.originalPrice * item.quantity).toFixed(2)] }))] })] })] }, `${item.id}-${item.size}-${item.color}`));
                                            }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "flex flex-row items-center justify-between", children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(User, { className: "h-5 w-5" }), "Contact Information"] }) }), _jsx(CardContent, { children: _jsx("p", { className: "text-sm sm:text-base", children: user?.primaryEmailAddress?.emailAddress }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { className: "flex flex-row items-center justify-between", children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(MapPin, { className: "h-5 w-5" }), "Shipping Address"] }) }), _jsx(CardContent, { children: _jsxs("div", { className: "text-sm sm:text-base space-y-1", children: [_jsxs("p", { className: "font-medium", children: [singleOrder?.shippingAddress.firstName, " ", singleOrder?.shippingAddress.lastName] }), _jsxs("p", { children: [" ", singleOrder?.shippingAddress.street, " "] }), _jsxs("p", { children: [singleOrder?.shippingAddress.city, " ,  ", singleOrder?.shippingAddress.state, " .  ", singleOrder?.shippingAddress.zipCode] }), _jsx("p", { children: singleOrder?.shippingAddress.country }), _jsxs("p", { className: "text-gray-600", children: [" ", singleOrder?.shippingAddress.country, " "] })] }) })] }), _jsx(ShippingMethod, {})] }), _jsx("div", { className: "lg:col-span-1", children: _jsxs(Card, { className: "lg:sticky lg:top-24", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Order Summary" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between text-sm sm:text-base", children: [_jsxs("span", { children: ["Subtotal (", singleOrder?.items.length, " items)"] }), _jsxs("span", { children: ["$", singleOrder?.total.toFixed(2)] })] }), _jsx("div", { className: "flex justify-between text-sm sm:text-base", children: _jsx("span", { children: "Shipping" }) }), _jsx("div", { className: "flex justify-between text-sm sm:text-base", children: _jsx("span", { children: "Tax" }) }), _jsx(Separator, {}), _jsxs("div", { className: "flex justify-between font-semibold text-base sm:text-lg", children: [_jsx("span", { children: "Total" }), _jsxs("span", { children: ["$", singleOrder?.total.toFixed(2)] })] })] }), _jsxs("div", { className: "pt-4 space-y-3", children: [_jsx(CheckoutPage, {}), _jsx(Button, { variant: "outline", className: "w-full h-12 bg-transparent", children: "Back to Checkout" })] }), _jsxs("div", { className: "pt-4 space-y-3 text-xs sm:text-sm text-gray-600", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "w-4 h-4 bg-green-100 rounded-full flex items-center justify-center", children: _jsx("div", { className: "w-2 h-2 bg-green-600 rounded-full" }) }), _jsx("span", { children: "Secure 256-bit SSL encryption" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "w-4 h-4 bg-blue-100 rounded-full flex items-center justify-center", children: _jsx("div", { className: "w-2 h-2 bg-blue-600 rounded-full" }) }), _jsx("span", { children: "30-day money-back guarantee" })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "w-4 h-4 bg-purple-100 rounded-full flex items-center justify-center", children: _jsx("div", { className: "w-2 h-2 bg-purple-600 rounded-full" }) }), _jsx("span", { children: "Free returns & exchanges" })] })] })] })] }) })] })] }) }));
}
